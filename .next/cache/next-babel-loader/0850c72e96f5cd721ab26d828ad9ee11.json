{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from \"../firebase/firebase\";\nvar storage = firebase.storage();\nexport function uploadFilesToFirebase(files) {\n  var promises = [];\n  files.forEach(function (file) {\n    var uploadTask = storage.ref(\"files/\".concat(file.name)).put(file);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n      var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log('Upload is ' + progress + '% done');\n    }, function (error) {\n      console.log(error);\n    }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"file \".concat(file.name, \" uploaded\"));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n  });\n  Promise.all(promises).then(function () {\n    return alert('All files uploaded');\n  })[\"catch\"](function (err) {\n    return console.log(err.code);\n  });\n}","map":{"version":3,"sources":["C:/Users/mabet/Desktop/nextjs-prueba/firebase/fileupload.js"],"names":["firebase","storage","uploadFilesToFirebase","files","promises","forEach","file","uploadTask","ref","name","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","console","log","error","Promise","all","then","alert","err","code"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,IAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAT,EAAhB;AAEA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAqC;AACxC,MAAMC,QAAQ,GAAG,EAAjB;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAG;AACjB,QAAMC,UAAU,GAAGN,OAAO,CAACO,GAAR,iBAAqBF,IAAI,CAACG,IAA1B,GAAkCC,GAAlC,CAAsCJ,IAAtC,CAAnB;AACAC,IAAAA,UAAU,CAACI,EAAX,CACIX,QAAQ,CAACC,OAAT,CAAiBW,SAAjB,CAA2BC,aAD/B,EAEI,UAACC,QAAD,EAAa;AACT,UAAIC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAAnE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,QAAf,GAA0B,QAAtC;AACH,KALL,EAMI,UAACK,KAAD,EAAU;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KARL,wEASI;AAAA;AAAA;AAAA;AAAA;AACIF,cAAAA,OAAO,CAACC,GAAR,gBAAoBb,IAAI,CAACG,IAAzB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATJ;AAaH,GAfD;AAgBAY,EAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ,EACCmB,IADD,CACM;AAAA,WAAMC,KAAK,CAAC,oBAAD,CAAX;AAAA,GADN,WAEO,UAAAC,GAAG;AAAA,WAAIP,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACC,IAAhB,CAAJ;AAAA,GAFV;AAGH","sourcesContent":["import firebase from \"../firebase/firebase\";\r\nconst storage = firebase.storage();\r\n  \r\nexport function uploadFilesToFirebase(files){\r\n    const promises = [];\r\n    files.forEach(file =>{\r\n        const uploadTask = storage.ref(`files/${file.name}`).put(file);\r\n        uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            (snapshot) =>{\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log('Upload is ' + progress + '% done');\r\n            },\r\n            (error) =>{\r\n                console.log(error);\r\n            },\r\n            async () =>{\r\n                console.log(`file ${file.name} uploaded`);\r\n            }\r\n        )\r\n    })\r\n    Promise.all(promises)\r\n    .then(() => alert('All files uploaded'))\r\n    .catch(err => console.log(err.code));\r\n}"]},"metadata":{},"sourceType":"module"}