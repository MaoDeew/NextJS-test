{"ast":null,"code":"import firebase from \"../firebase/firebase\";\nconst storage = firebase.storage();\nexport var progress;\nexport function uploadFilesToFirebase(files) {\n  const promises = [];\n  files.forEach(file => {\n    const uploadTask = storage.ref(`files/${file.name}`).put(file);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, snapshot => {\n      progress += snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log('Upload is ' + progress + '% done');\n    }, error => {\n      console.log(error);\n    }, async () => {\n      console.log(`file ${file.name} uploaded`);\n    });\n  });\n  Promise.all(promises).then(() => alert('All files uploaded')).catch(err => console.log(err.code));\n}","map":{"version":3,"sources":["C:/Users/mabet/Desktop/nextjs-prueba/firebase/fileupload.js"],"names":["firebase","storage","progress","uploadFilesToFirebase","files","promises","forEach","file","uploadTask","ref","name","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","console","log","error","Promise","all","then","alert","catch","err","code"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,MAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAT,EAAhB;AACA,OAAO,IAAIC,QAAJ;AACP,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAqC;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAG;AACjB,UAAMC,UAAU,GAAGP,OAAO,CAACQ,GAAR,CAAa,SAAQF,IAAI,CAACG,IAAK,EAA/B,EAAkCC,GAAlC,CAAsCJ,IAAtC,CAAnB;AACAC,IAAAA,UAAU,CAACI,EAAX,CACIZ,QAAQ,CAACC,OAAT,CAAiBY,SAAjB,CAA2BC,aAD/B,EAEKC,QAAD,IAAa;AACTb,MAAAA,QAAQ,IAAKa,QAAQ,CAACC,gBAAT,GAA4BD,QAAQ,CAACE,UAAtC,GAAoD,GAAhE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAejB,QAAf,GAA0B,QAAtC;AACH,KALL,EAMKkB,KAAD,IAAU;AACNF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KARL,EASI,YAAW;AACPF,MAAAA,OAAO,CAACC,GAAR,CAAa,QAAOZ,IAAI,CAACG,IAAK,WAA9B;AACH,KAXL;AAaH,GAfD;AAgBAW,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EACCkB,IADD,CACM,MAAMC,KAAK,CAAC,oBAAD,CADjB,EAECC,KAFD,CAEOC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,IAAhB,CAFd;AAGH","sourcesContent":["import firebase from \"../firebase/firebase\";\r\nconst storage = firebase.storage();\r\nexport var progress;\r\nexport function uploadFilesToFirebase(files){\r\n    const promises = [];\r\n    files.forEach(file =>{\r\n        const uploadTask = storage.ref(`files/${file.name}`).put(file);\r\n        uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            (snapshot) =>{\r\n                progress += (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log('Upload is ' + progress + '% done');\r\n            },\r\n            (error) =>{\r\n                console.log(error);\r\n            },\r\n            async () =>{\r\n                console.log(`file ${file.name} uploaded`);\r\n            }\r\n        )\r\n    })\r\n    Promise.all(promises)\r\n    .then(() => alert('All files uploaded'))\r\n    .catch(err => console.log(err.code));\r\n}"]},"metadata":{},"sourceType":"module"}