{"ast":null,"code":"import firebase from \"../firebase/firebase\";\nconst storage = firebase.storage();\nexport function uploadFilesToFirebase(files) {\n  const promises = [];\n  var error;\n  files.forEach(file => {\n    const uploadTask = storage.ref(`files/${file.name}`).put(file);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, snapshot => {\n      var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100; //console.log('Upload is ' + progress + '% done');\n    }, error => {//console.log(error)  \n    }, async () => {//console.log(`file ${file.name} uploaded`);\n    });\n  });\n  Promise.all(promises).then(() =>\n  /*console.log(\"All files uploaded\")*/\n  console.log(error)).catch(error =>\n  /*console.log(error.code)*/\n  console.log(\"ERROR\"));\n}","map":{"version":3,"sources":["C:/Users/mabet/Desktop/nextjs-prueba/firebase/fileupload.js"],"names":["firebase","storage","uploadFilesToFirebase","files","promises","error","forEach","file","uploadTask","ref","name","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","Promise","all","then","console","log","catch"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,MAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAT,EAAhB;AAEA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAqC;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAJ;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAG;AACjB,UAAMC,UAAU,GAAGP,OAAO,CAACQ,GAAR,CAAa,SAAQF,IAAI,CAACG,IAAK,EAA/B,EAAkCC,GAAlC,CAAsCJ,IAAtC,CAAnB;AACAC,IAAAA,UAAU,CAACI,EAAX,CACIZ,QAAQ,CAACC,OAAT,CAAiBY,SAAjB,CAA2BC,aAD/B,EAEKC,QAAD,IAAa;AACT,UAAIC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAAnE,CADS,CAET;AACH,KALL,EAMKb,KAAD,IAAU,CACR;AACD,KARL,EASI,YAAW,CACP;AACH,KAXL;AAaH,GAfD;AAiBAc,EAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ,EACCiB,IADD,CACM;AAAM;AAAsCC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ,CADlD,EAECmB,KAFD,CAEOnB,KAAK;AAAI;AAA4BiB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAF5C;AAGH","sourcesContent":["import firebase from \"../firebase/firebase\";\r\nconst storage = firebase.storage();\r\n\r\nexport function uploadFilesToFirebase(files){\r\n    const promises = [];\r\n    var error;\r\n    files.forEach(file =>{\r\n        const uploadTask = storage.ref(`files/${file.name}`).put(file);\r\n        uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            (snapshot) =>{\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                //console.log('Upload is ' + progress + '% done');\r\n            },\r\n            (error) =>{\r\n              //console.log(error)  \r\n            },\r\n            async () =>{\r\n                //console.log(`file ${file.name} uploaded`);\r\n            }\r\n        )\r\n    })\r\n\r\n    Promise.all(promises)\r\n    .then(() => /*console.log(\"All files uploaded\")*/ console.log(error))\r\n    .catch(error => /*console.log(error.code)*/ console.log(\"ERROR\"))\r\n}"]},"metadata":{},"sourceType":"module"}