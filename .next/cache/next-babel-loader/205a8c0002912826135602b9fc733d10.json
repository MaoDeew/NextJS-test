{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabet\\\\Desktop\\\\nextjs-prueba\\\\components\\\\FileUpload.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { uploadFilesToFirebase } from \"../firebase/fileupload\";\n\nconst FileUpload = () => {\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: statusUpload,\n    1: setStatusUpload\n  } = useState([]);\n\n  const handleChange = event => {\n    for (let i = 0; i < event.target.files.length; i++) {\n      const fileSelected = event.target.files[i];\n      fileSelected[\"id\"] = Math.random();\n      fileSelected[\"extension\"] = fileSelected.name.split('.').pop();\n      setFiles(prevState => [...prevState, fileSelected]);\n    }\n  };\n\n  const handleUpload = event => {\n    event.preventDefault();\n    const response = uploadFilesToFirebase(files);\n    setStatusUpload(response);\n  };\n\n  const totalFilesSize = files.reduce((sumFile, file) => {\n    return sumFile + file.size;\n  }, 0);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, console.log(statusUpload), __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Upload\"), files.map(file => {\n    return __jsx(\"li\", {\n      key: file.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, file.name, file.size);\n  }), statusUpload.forEach(status => {\n    if (status.message != \"All Files Uploaded\") {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, status.code, \" \", status.message);\n    } else {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }\n      }, status.message);\n    }\n  }));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/mabet/Desktop/nextjs-prueba/components/FileUpload.js"],"names":["useState","uploadFilesToFirebase","FileUpload","files","setFiles","statusUpload","setStatusUpload","handleChange","event","i","target","length","fileSelected","Math","random","name","split","pop","prevState","handleUpload","preventDefault","response","totalFilesSize","reduce","sumFile","file","size","console","log","map","id","forEach","status","message","code"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;;AAEA,MAAMC,UAAU,GAAG,MAAK;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMO,YAAY,GAAIC,KAAD,IAAU;AAC3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAAN,CAAaP,KAAb,CAAmBQ,MAAvC,EAA+CF,CAAC,EAAhD,EAAoD;AAChD,YAAMG,YAAY,GAAGJ,KAAK,CAACE,MAAN,CAAaP,KAAb,CAAmBM,CAAnB,CAArB;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ,GAAqBC,IAAI,CAACC,MAAL,EAArB;AACAF,MAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BA,YAAY,CAACG,IAAb,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,EAA5B;AACAb,MAAAA,QAAQ,CAACc,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeN,YAAf,CAAd,CAAR;AACD;AAEN,GARD;;AAUA,QAAMO,YAAY,GAAIX,KAAD,IAAU;AAC3BA,IAAAA,KAAK,CAACY,cAAN;AAEA,UAAMC,QAAQ,GAAGpB,qBAAqB,CAACE,KAAD,CAAtC;AACAG,IAAAA,eAAe,CAACe,QAAD,CAAf;AAEH,GAND;;AAQA,QAAMC,cAAc,GAAGnB,KAAK,CAACoB,MAAN,CAAa,CAACC,OAAD,EAASC,IAAT,KAAiB;AACjD,WAAOD,OAAO,GAAGC,IAAI,CAACC,IAAtB;AACH,GAFsB,EAErB,CAFqB,CAAvB;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,CAACC,GAAR,CAAYvB,YAAZ,CADL,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEE,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,OAAO,EAAEY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKhB,KAAK,CAAC0B,GAAN,CAAUJ,IAAI,IAAG;AACd,WACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,IAAI,CAACV,IADV,EAEKU,IAAI,CAACC,IAFV,CADJ;AAMH,GAPA,CAJL,EAaKrB,YAAY,CAAC0B,OAAb,CAAqBC,MAAM,IAAE;AAC1B,QAAGA,MAAM,CAACC,OAAP,IAAgB,oBAAnB,EAAwC;AACvC,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,MAAM,CAACE,IAAX,OAAkBF,MAAM,CAACC,OAAzB,CADH;AAGA,KAJD,MAIK;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,MAAM,CAACC,OAAX,CAAP;AACH;AACJ,GARA,CAbL,CADJ;AAyBH,CAlDD;;AAoDA,eAAe/B,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { uploadFilesToFirebase } from \"../firebase/fileupload\";\r\n\r\nconst FileUpload = () =>{\r\n    const [files, setFiles] = useState([]);\r\n    const [statusUpload, setStatusUpload] = useState([]);\r\n    const handleChange = (event) =>{\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n            const fileSelected = event.target.files[i];\r\n            fileSelected[\"id\"] = Math.random();\r\n            fileSelected[\"extension\"] = fileSelected.name.split('.').pop();\r\n            setFiles(prevState => [...prevState, fileSelected]);\r\n          }\r\n        \r\n    }\r\n\r\n    const handleUpload = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const response = uploadFilesToFirebase(files)\r\n        setStatusUpload(response)\r\n       \r\n    }\r\n\r\n    const totalFilesSize = files.reduce((sumFile,file) =>{\r\n        return sumFile + file.size;\r\n    },0);\r\n\r\n    return(\r\n        <div>\r\n            {console.log(statusUpload)}\r\n            <input type=\"file\" onChange={handleChange}></input>\r\n            <button onClick={handleUpload}>Upload</button>\r\n            {files.map(file =>{\r\n                return(\r\n                    <li key={file.id}>\r\n                        {file.name}  \r\n                        {file.size}\r\n                    </li>\r\n                )\r\n            })}\r\n\r\n            {statusUpload.forEach(status=>{\r\n                if(status.message!=\"All Files Uploaded\"){\r\n                 return(\r\n                    <p>{status.code} {status.message}</p>\r\n                 )   \r\n                }else{\r\n                    return(<p>{status.message}</p>)\r\n                } \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}