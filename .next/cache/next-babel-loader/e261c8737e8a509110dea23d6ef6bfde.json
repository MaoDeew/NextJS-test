{"ast":null,"code":"import firebase from \"../firebase/firebase\";\nconst storage = firebase.storage();\n/*export function uploadFilesToFirebase(files){\r\n    const promises = [];\r\n    files.forEach(file =>{\r\n        const uploadTask = storage.ref(`files/${file.name}`).put(file);\r\n        uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            (snapshot) =>{\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                //console.log('Upload is ' + progress + '% done');\r\n            },\r\n            (error) =>{\r\n              \r\n            },\r\n            async () =>{\r\n                console.log(`file ${file.name} uploaded`);\r\n            }\r\n        )\r\n    })\r\n\r\n    return promises;\r\n}*/\n\nexport function uploadFilesToFirebase(files) {\n  const promises = [];\n  const promise = new Promise((resolve, reject) => {\n    const uploadTask = storage.ref(`files/${file.name}`).put(file);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, snapshot => {\n      var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100; //console.log('Upload is ' + progress + '% done');\n    }, error => {\n      reject(error);\n    }, async () => {\n      resolve(\"FILE UPLOADED\");\n    });\n  });\n  promises.push(promise);\n  return promises;\n}","map":{"version":3,"sources":["C:/Users/mabet/Desktop/nextjs-prueba/firebase/fileupload.js"],"names":["firebase","storage","uploadFilesToFirebase","files","promises","promise","Promise","resolve","reject","uploadTask","ref","file","name","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","error","push"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,MAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAT,EAAhB;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAqC;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AAC1C,UAAMC,UAAU,GAAGR,OAAO,CAACS,GAAR,CAAa,SAAQC,IAAI,CAACC,IAAK,EAA/B,EAAkCC,GAAlC,CAAsCF,IAAtC,CAAnB;AACAF,IAAAA,UAAU,CAACK,EAAX,CACId,QAAQ,CAACC,OAAT,CAAiBc,SAAjB,CAA2BC,aAD/B,EAEKC,QAAD,IAAa;AACT,UAAIC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAAnE,CADS,CAET;AACH,KALL,EAMKC,KAAD,IAAU;AACRb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACD,KARL,EASI,YAAW;AACRd,MAAAA,OAAO,CAAC,eAAD,CAAP;AACF,KAXL;AAaH,GAfe,CAAhB;AAgBAH,EAAAA,QAAQ,CAACkB,IAAT,CAAcjB,OAAd;AACA,SAAOD,QAAP;AACH","sourcesContent":["import firebase from \"../firebase/firebase\";\r\nconst storage = firebase.storage();\r\n\r\n/*export function uploadFilesToFirebase(files){\r\n    const promises = [];\r\n    files.forEach(file =>{\r\n        const uploadTask = storage.ref(`files/${file.name}`).put(file);\r\n        uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            (snapshot) =>{\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                //console.log('Upload is ' + progress + '% done');\r\n            },\r\n            (error) =>{\r\n              \r\n            },\r\n            async () =>{\r\n                console.log(`file ${file.name} uploaded`);\r\n            }\r\n        )\r\n    })\r\n\r\n    return promises;\r\n}*/\r\n\r\nexport function uploadFilesToFirebase(files){\r\n    const promises = [];\r\n    const promise = new Promise((resolve,reject)=>{\r\n        const uploadTask = storage.ref(`files/${file.name}`).put(file);\r\n        uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            (snapshot) =>{\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                //console.log('Upload is ' + progress + '% done');\r\n            },\r\n            (error) =>{\r\n              reject(error)\r\n            },\r\n            async () =>{\r\n               resolve(\"FILE UPLOADED\")\r\n            }\r\n        )\r\n    })\r\n    promises.push(promise)\r\n    return promises;\r\n}"]},"metadata":{},"sourceType":"module"}