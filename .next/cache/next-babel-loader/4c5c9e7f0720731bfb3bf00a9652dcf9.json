{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mabet\\\\Desktop\\\\nextjs-prueba\\\\components\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { uploadFilesToFirebase } from \"../firebase/fileupload\";\n\nvar FileUpload = function FileUpload() {\n  _s();\n\n  var _useState = useState([]),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var _useState2 = useState(false),\n      uploaded = _useState2[0],\n      isUploaded = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    var _loop = function _loop(i) {\n      var fileSelected = event.target.files[i];\n      fileSelected[\"id\"] = Math.random();\n      fileSelected[\"extension\"] = fileSelected.name.split('.').pop();\n      setFiles(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [fileSelected]);\n      });\n    };\n\n    for (var i = 0; i < event.target.files.length; i++) {\n      _loop(i);\n    }\n  };\n\n  var handleUpload = function handleUpload(event) {\n    event.preventDefault();\n    var promises = uploadFilesToFirebase(files);\n    Promise.all(promises.map(function (promise) {\n      return promise[\"catch\"](function (e) {\n        return e;\n      });\n    })).then(function (responses) {\n      return console.log(responses.every(function (response) {\n        return response == \"Uploaded\";\n      }));\n    });\n  };\n\n  var totalFilesSize = files.reduce(function (sumFile, file) {\n    return sumFile + file.size;\n  }, 0);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: handleUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Upload\"), files.map(function (file) {\n    return __jsx(\"li\", {\n      key: file.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, file.name, file.size);\n  }));\n};\n\n_s(FileUpload, \"MwYVkg3+cJJK1qwWbAmrdyavxGM=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/mabet/Desktop/nextjs-prueba/components/FileUpload.js"],"names":["useState","uploadFilesToFirebase","FileUpload","files","setFiles","uploaded","isUploaded","handleChange","event","i","fileSelected","target","Math","random","name","split","pop","prevState","length","handleUpload","preventDefault","promises","Promise","all","map","promise","e","then","responses","console","log","every","response","totalFilesSize","reduce","sumFile","file","size","id"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAK;AAAA;;AAAA,kBACMF,QAAQ,CAAC,EAAD,CADd;AAAA,MACbG,KADa;AAAA,MACNC,QADM;;AAAA,mBAEWJ,QAAQ,CAAC,KAAD,CAFnB;AAAA,MAEbK,QAFa;AAAA,MAEHC,UAFG;;AAGpB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAU;AAAA,+BAClBC,CADkB;AAEvB,UAAMC,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAaR,KAAb,CAAmBM,CAAnB,CAArB;AACAC,MAAAA,YAAY,CAAC,IAAD,CAAZ,GAAqBE,IAAI,CAACC,MAAL,EAArB;AACAH,MAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BA,YAAY,CAACI,IAAb,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,EAA5B;AACAZ,MAAAA,QAAQ,CAAC,UAAAa,SAAS;AAAA,4CAAQA,SAAR,IAAmBP,YAAnB;AAAA,OAAV,CAAR;AALuB;;AAC3B,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACG,MAAN,CAAaR,KAAb,CAAmBe,MAAvC,EAA+CT,CAAC,EAAhD,EAAoD;AAAA,YAA3CA,CAA2C;AAKjD;AAEN,GARD;;AAUA,MAAMU,YAAY,GAAG,SAAfA,YAAe,CAACX,KAAD,EAAU;AAC3BA,IAAAA,KAAK,CAACY,cAAN;AAEA,QAAMC,QAAQ,GAAGpB,qBAAqB,CAACE,KAAD,CAAtC;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,CAAa,UAAAC,OAAO;AAAA,aAAIA,OAAO,SAAP,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAJ;AAAA,OAAf,CAAJ;AAAA,KAApB,CAAZ,EACCC,IADD,CACM,UAAAC,SAAS;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,KAAV,CAAgB,UAAAC,QAAQ;AAAA,eAAGA,QAAQ,IAAE,UAAb;AAAA,OAAxB,CAAZ,CAAJ;AAAA,KADf;AAMH,GAVD;;AAYA,MAAMC,cAAc,GAAG9B,KAAK,CAAC+B,MAAN,CAAa,UAACC,OAAD,EAASC,IAAT,EAAiB;AACjD,WAAOD,OAAO,GAAGC,IAAI,CAACC,IAAtB;AACH,GAFsB,EAErB,CAFqB,CAAvB;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAE9B,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKhB,KAAK,CAACqB,GAAN,CAAU,UAAAY,IAAI,EAAG;AACd,WACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACtB,IADV,EAEKsB,IAAI,CAACC,IAFV,CADJ;AAMH,GAPA,CAHL,CADJ;AAcH,CA3CD;;GAAMnC,U;;KAAAA,U;AA6CN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { uploadFilesToFirebase } from \"../firebase/fileupload\";\r\n\r\nconst FileUpload = () =>{\r\n    const [files, setFiles] = useState([]);\r\n    const [uploaded, isUploaded] = useState(false);\r\n    const handleChange = (event) =>{\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n            const fileSelected = event.target.files[i];\r\n            fileSelected[\"id\"] = Math.random();\r\n            fileSelected[\"extension\"] = fileSelected.name.split('.').pop();\r\n            setFiles(prevState => [...prevState, fileSelected]);\r\n          }\r\n        \r\n    }\r\n\r\n    const handleUpload = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const promises = uploadFilesToFirebase(files)\r\n        Promise.all(promises.map(promise => promise.catch(e => e)))\r\n        .then(responses => console.log(responses.every(response=> response==\"Uploaded\")))\r\n            \r\n        \r\n        \r\n       \r\n    }\r\n\r\n    const totalFilesSize = files.reduce((sumFile,file) =>{\r\n        return sumFile + file.size;\r\n    },0);\r\n\r\n    return(\r\n        <div>\r\n            <input type=\"file\" onChange={handleChange}></input>\r\n            <button onClick={handleUpload}>Upload</button>\r\n            {files.map(file =>{\r\n                return(\r\n                    <li key={file.id}>\r\n                        {file.name}  \r\n                        {file.size}\r\n                    </li>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}