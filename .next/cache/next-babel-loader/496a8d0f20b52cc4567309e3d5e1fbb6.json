{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabet\\\\Desktop\\\\nextjs-prueba\\\\components\\\\FileUpload.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { uploadFilesToFirebase } from \"../firebase/fileupload\";\n\nconst FileUpload = () => {\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState([]);\n\n  const handleChange = event => {\n    for (let i = 0; i < event.target.files.length; i++) {\n      const fileSelected = event.target.files[i];\n      fileSelected[\"id\"] = Math.random();\n      fileSelected[\"extension\"] = fileSelected.name.split('.').pop();\n      setFiles(prevState => [...prevState, fileSelected]);\n    }\n  };\n\n  const handleUpload = event => {\n    event.preventDefault();\n    const promises = uploadFilesToFirebase(files);\n    Promise.all(promises.map(promise => promise.catch(e => e))).then(responses => {\n      const foundError = responses.every(response => response != \"File Uploaded\");\n\n      if (foundError) {\n        responses.forEach(response => {\n          const error = {\n            code: response.code,\n            message: response.message\n          };\n        });\n      }\n    });\n  };\n\n  const totalFilesSize = files.reduce((sumFile, file) => {\n    return sumFile + file.size;\n  }, 0);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Upload\"), files.map(file => {\n    return __jsx(\"li\", {\n      key: file.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, file.name, file.size);\n  }));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/mabet/Desktop/nextjs-prueba/components/FileUpload.js"],"names":["useState","uploadFilesToFirebase","FileUpload","files","setFiles","errors","setErrors","handleChange","event","i","target","length","fileSelected","Math","random","name","split","pop","prevState","handleUpload","preventDefault","promises","Promise","all","map","promise","catch","e","then","responses","foundError","every","response","forEach","error","code","message","totalFilesSize","reduce","sumFile","file","size","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;;AAEA,MAAMC,UAAU,GAAG,MAAK;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMO,YAAY,GAAIC,KAAD,IAAU;AAC3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAAN,CAAaP,KAAb,CAAmBQ,MAAvC,EAA+CF,CAAC,EAAhD,EAAoD;AAChD,YAAMG,YAAY,GAAGJ,KAAK,CAACE,MAAN,CAAaP,KAAb,CAAmBM,CAAnB,CAArB;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ,GAAqBC,IAAI,CAACC,MAAL,EAArB;AACAF,MAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BA,YAAY,CAACG,IAAb,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,EAA5B;AACAb,MAAAA,QAAQ,CAACc,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeN,YAAf,CAAd,CAAR;AACD;AAEN,GARD;;AAUA,QAAMO,YAAY,GAAIX,KAAD,IAAU;AAC3BA,IAAAA,KAAK,CAACY,cAAN;AAEA,UAAMC,QAAQ,GAAGpB,qBAAqB,CAACE,KAAD,CAAtC;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAAIA,OAAO,CAACC,KAAR,CAAcC,CAAC,IAAIA,CAAnB,CAAxB,CAAZ,EACCC,IADD,CACMC,SAAS,IAAG;AACd,YAAMC,UAAU,GAAGD,SAAS,CAACE,KAAV,CAAgBC,QAAQ,IAAGA,QAAQ,IAAE,eAArC,CAAnB;;AACA,UAAGF,UAAH,EAAc;AACVD,QAAAA,SAAS,CAACI,OAAV,CAAkBD,QAAQ,IAAG;AACzB,gBAAME,KAAK,GAAE;AACTC,YAAAA,IAAI,EAAGH,QAAQ,CAACG,IADP;AAETC,YAAAA,OAAO,EAAGJ,QAAQ,CAACI;AAFV,WAAb;AAIH,SALD;AAMH;AACJ,KAXD;AAgBH,GApBD;;AAsBA,QAAMC,cAAc,GAAGlC,KAAK,CAACmC,MAAN,CAAa,CAACC,OAAD,EAASC,IAAT,KAAiB;AACjD,WAAOD,OAAO,GAAGC,IAAI,CAACC,IAAtB;AACH,GAFsB,EAErB,CAFqB,CAAvB;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAElC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKhB,KAAK,CAACqB,GAAN,CAAUgB,IAAI,IAAG;AACd,WACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACzB,IADV,EAEKyB,IAAI,CAACC,IAFV,CADJ;AAMH,GAPA,CAHL,CADJ;AAcH,CArDD;;AAuDA,eAAevC,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { uploadFilesToFirebase } from \"../firebase/fileupload\";\r\n\r\nconst FileUpload = () =>{\r\n    const [files, setFiles] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const handleChange = (event) =>{\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n            const fileSelected = event.target.files[i];\r\n            fileSelected[\"id\"] = Math.random();\r\n            fileSelected[\"extension\"] = fileSelected.name.split('.').pop();\r\n            setFiles(prevState => [...prevState, fileSelected]);\r\n          }\r\n        \r\n    }\r\n\r\n    const handleUpload = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const promises = uploadFilesToFirebase(files)\r\n        Promise.all(promises.map(promise => promise.catch(e => e)))\r\n        .then(responses =>{\r\n            const foundError = responses.every(response=> response!=\"File Uploaded\")\r\n            if(foundError){\r\n                responses.forEach(response =>{\r\n                    const error ={\r\n                        code : response.code,\r\n                        message : response.message\r\n                    }\r\n                })\r\n            }\r\n        })\r\n            \r\n        \r\n        \r\n       \r\n    }\r\n\r\n    const totalFilesSize = files.reduce((sumFile,file) =>{\r\n        return sumFile + file.size;\r\n    },0);\r\n\r\n    return(\r\n        <div>\r\n            <input type=\"file\" onChange={handleChange}></input>\r\n            <button onClick={handleUpload}>Upload</button>\r\n            {files.map(file =>{\r\n                return(\r\n                    <li key={file.id}>\r\n                        {file.name}  \r\n                        {file.size}\r\n                    </li>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}